{"version":3,"sources":["../../../api/src/controllers/menuController.js"],"names":["MenusControllers","today","Date","date","getDate","month","getMonth","year","getFullYear","req","res","MenuControllers","generateDate","Menu","findAll","where","createdAt","menus","status","json","success","message","fetchData","body","mealId","quantity","Meal","findOne","id","adminId","admin","meal","Error","dataValues","updatedAt","ordinaryMeal","Number","menu","menuMeals","length","push","create","meals","JSON","stringify","update","updateMeals","findIndex","menuMeal","mealIndex","addMenu","FetchData","updatedMenuMeals","parse"],"mappings":";;;;;;;AAAA;;AACA;;;;;;;;;;;;;;;;;;IACMA,gB;;;;;;;;;mCACW;AACb,UAAIC,KAAK,GAAG,IAAIC,IAAJ,EAAZ;AACA,UAAIC,IAAI,GAAGF,KAAK,CAACG,OAAN,EAAX;AACA,UAAIC,KAAK,GAAGJ,KAAK,CAACK,QAAN,KAAmB,CAA/B,CAHa,CAGqB;;AAClC,UAAIC,IAAI,GAAGN,KAAK,CAACO,WAAN,EAAX;;AACA,UAAIL,IAAI,GAAG,EAAX,EAAe;AACbA,QAAAA,IAAI,cAAOA,IAAP,CAAJ;AACD;;AACD,UAAIE,KAAK,GAAG,EAAZ,EAAgB;AACdA,QAAAA,KAAK,cAAOA,KAAP,CAAL;AACD;;AACDJ,MAAAA,KAAK,aAAMI,KAAN,cAAeF,IAAf,cAAuBI,IAAvB,CAAL;AACA,aAAON,KAAP;AACD;;;;;;+CAEkBQ,G,EAAKC,G;;;;;;;AAEdT,gBAAAA,K,GAAQU,eAAe,CAACC,YAAhB,E;;uBACMC,cAAKC,OAAL,CAAa;AAAEC,kBAAAA,KAAK,EAAE;AAAEC,oBAAAA,SAAS,EAAEf;AAAb;AAAT,iBAAb,C;;;AAAdgB,gBAAAA,K;iDACCP,GAAG,CAACQ,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAC1BC,kBAAAA,OAAO,EAAE,IADiB;AAE1BC,kBAAAA,OAAO,EAAE,yCAFiB;AAG1BC,kBAAAA,SAAS,EAAEL;AAHe,iBAArB,C;;;;;iDAMAP,GAAG,CAACQ,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAC1BD,kBAAAA,MAAM,EAAE,KADkB;AAE1BG,kBAAAA,OAAO,EAAE,YAAMA;AAFW,iBAArB,C;;;;;;;;;;;;;;;;;;;;;gDAOSZ,G,EAAKC,G;;;;;;;;4BAEQD,GAAG,CAACc,I,EAAzBC,M,aAAAA,M,EAAQC,Q,aAAAA,Q;;uBACGC,eAAKC,OAAL,CAAa;AAAEZ,kBAAAA,KAAK,EAAE;AAAEa,oBAAAA,EAAE,EAAEJ,MAAN;AAAcK,oBAAAA,OAAO,EAAEpB,GAAG,CAACqB,KAAJ,CAAUF;AAAjC;AAAT,iBAAb,C;;;AAAbG,gBAAAA,I;;oBACDA,I;;;;;sBACG,IAAIC,KAAJ,oC;;;mCAE0CD,IAAI,CAACE,U,EAA/CjB,S,oBAAAA,S,EAAWkB,S,oBAAAA,S,EAAcC,Y;AACjCA,gBAAAA,YAAY,CAACV,QAAb,GAAwBW,MAAM,CAACX,QAAD,CAA9B;AACMxB,gBAAAA,K,GAAQU,eAAe,CAACC,YAAhB,E;;uBACKC,cAAKC,OAAL,CAAa;AAAEC,kBAAAA,KAAK,EAAE;AAAEc,oBAAAA,OAAO,EAAEpB,GAAG,CAACqB,KAAJ,CAAUF,EAArB;AAAyBZ,oBAAAA,SAAS,EAAEf;AAApC;AAAT,iBAAb,C;;;AAAboC,gBAAAA,I;AACFC,gBAAAA,S,GAAY,E;;sBACZD,IAAI,CAACE,MAAL,KAAgB,C;;;;;AAClBD,gBAAAA,SAAS,CAACE,IAAV,CAAeL,YAAf;;AACAtB,8BAAK4B,MAAL,CAAY;AACVC,kBAAAA,KAAK,EAAEC,IAAI,CAACC,SAAL,CAAeN,SAAf,CADG;AAEVT,kBAAAA,OAAO,EAAEpB,GAAG,CAACqB,KAAJ,CAAUF;AAFT,iBAAZ;;;uBAIMF,eAAKmB,MAAL,CAAY;AAAEpB,kBAAAA,QAAQ,EAARA;AAAF,iBAAZ,EAA0B;AAAEV,kBAAAA,KAAK,EAAE;AAAEa,oBAAAA,EAAE,EAAEJ;AAAN;AAAT,iBAA1B,C;;;;;;;AAENc,gBAAAA,SAAS,GAAG3B,eAAe,CAACmC,WAAhB,CAA4BT,IAAI,CAAC,CAAD,CAAhC,EAAqCF,YAArC,EAAmDX,MAAnD,EAA2DC,QAA3D,CAAZ;;AACAZ,8BAAKgC,MAAL,CACE;AAAEH,kBAAAA,KAAK,EAAEC,IAAI,CAACC,SAAL,CAAeN,SAAf;AAAT,iBADF,EAEE;AAAEvB,kBAAAA,KAAK,EAAE;AAAEc,oBAAAA,OAAO,EAAEpB,GAAG,CAACqB,KAAJ,CAAUF,EAArB;AAAyBZ,oBAAAA,SAAS,EAAEf;AAApC;AAAT,iBAFF;;;uBAIwBqC,SAAS,CAACS,SAAV,CAAoB,UAAAC,QAAQ;AAAA,yBAAIA,QAAQ,CAACpB,EAAT,KAAgBQ,MAAM,CAACZ,MAAD,CAA1B;AAAA,iBAA5B,C;;;AAAlByB,gBAAAA,S;;uBACAvB,eAAKmB,MAAL,CAAY;AAAEpB,kBAAAA,QAAQ,EAAEa,SAAS,CAACW,SAAD,CAAT,CAAqBxB;AAAjC,iBAAZ,EAAyD;AAAEV,kBAAAA,KAAK,EAAE;AAAEa,oBAAAA,EAAE,EAAEJ;AAAN;AAAT,iBAAzD,C;;;kDAEDd,GAAG,CAACQ,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAC1BD,kBAAAA,MAAM,EAAE,IADkB;AAE1BG,kBAAAA,OAAO,2CAFmB;AAG1B6B,kBAAAA,OAAO,EAAEZ;AAHiB,iBAArB,C;;;;;kDAMA5B,GAAG,CAACQ,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAC1BD,kBAAAA,MAAM,EAAE,KADkB;AAE1BG,kBAAAA,OAAO,EAAE,aAAMA;AAFW,iBAArB,C;;;;;;;;;;;;;;;;;;;;;gDAOSZ,G,EAAKC,G;;;;;;;AAEfT,gBAAAA,K,GAAQU,eAAe,CAACC,YAAhB,E;;uBACKC,cAAKc,OAAL,CAAa;AAAEZ,kBAAAA,KAAK,EAAE;AAAEC,oBAAAA,SAAS,EAAEf,KAAb;AAAoB4B,oBAAAA,OAAO,EAAEpB,GAAG,CAACqB,KAAJ,CAAUF;AAAvC;AAAT,iBAAb,C;;;AAAbS,gBAAAA,I;kDACC3B,GAAG,CAACQ,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAC1BD,kBAAAA,MAAM,EAAE,IADkB;AAE1BG,kBAAAA,OAAO,EAAE,6BAFiB;AAG1B8B,kBAAAA,SAAS,EAAEd;AAHe,iBAArB,C;;;;;kDAMA3B,GAAG,CAACQ,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAC1BD,kBAAAA,MAAM,EAAE,KADkB;AAE1BG,kBAAAA,OAAO,EAAE,aAAMA;AAFW,iBAArB,C;;;;;;;;;;;;;;;;;;;;;gDAOOgB,I,EAAMF,Y,EAAcX,M,EAAQC,Q;;;;;;;AAElCiB,gBAAAA,K,GAAUL,IAAI,CAACJ,U,CAAfS,K;AACFU,gBAAAA,gB,GAAmBT,IAAI,CAACU,KAAL,CAAWX,KAAX,C;;uBACDU,gBAAgB,CAACL,SAAjB,CACtB,UAAAC,QAAQ;AAAA,yBAAIA,QAAQ,CAACpB,EAAT,KAAgBQ,MAAM,CAACZ,MAAD,CAA1B;AAAA,iBADc,C;;;AAAlByB,gBAAAA,S;;AAGN,oBAAIA,SAAS,GAAG,CAAhB,EAAmB;AACjBG,kBAAAA,gBAAgB,CAACZ,IAAjB,CAAsBL,YAAtB;AACD,iBAFD,MAEO;AACLiB,kBAAAA,gBAAgB,CAACH,SAAD,CAAhB,CAA4BxB,QAA5B,IAAwCW,MAAM,CAACX,QAAD,CAA9C;AACD;;kDACM2B,gB;;;;;kDAEA1C,GAAG,CAACQ,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAC1BD,kBAAAA,MAAM,EAAE,KADkB;AAE1BG,kBAAAA,OAAO,EAAE,aAAMA;AAFW,iBAArB,C;;;;;;;;;;;;;;;;;;;;;AAQb,IAAMV,eAAe,GAAG,IAAIX,gBAAJ,EAAxB;eACeW,e","sourcesContent":["import Menu from '../models/menu';\r\nimport Meal from '../models/meals';\r\nclass MenusControllers {\r\n  generateDate() {\r\n    let today = new Date();\r\n    let date = today.getDate();\r\n    let month = today.getMonth() + 1; //January is 0!\r\n    let year = today.getFullYear();\r\n    if (date < 10) {\r\n      date = `0${date}`;\r\n    }\r\n    if (month < 10) {\r\n      month = `0${month}`;\r\n    }\r\n    today = `${month}-${date}-${year}`;\r\n    return today;\r\n  }\r\n\r\n  async getTodayMenu(req, res) {\r\n    try {\r\n      const today = MenuControllers.generateDate();\r\n      const menus = await Menu.findAll({ where: { createdAt: today } });\r\n      return res.status(200).json({\r\n        success: true,\r\n        message: 'menu for the day retrieved successfully',\r\n        fetchData: menus\r\n      });\r\n    } catch (error) {\r\n      return res.status(404).json({\r\n        status: false,\r\n        message: error.message\r\n      });\r\n    }\r\n  }\r\n\r\n  async addMealToMenu(req, res) {\r\n    try {\r\n      const { mealId, quantity } = req.body;\r\n      const meal = await Meal.findOne({ where: { id: mealId, adminId: req.admin.id } });\r\n      if (!meal) {\r\n        throw new Error(`Meal with that ID does not exist`);\r\n      }\r\n      const { createdAt, updatedAt, ...ordinaryMeal } = meal.dataValues;\r\n      ordinaryMeal.quantity = Number(quantity);\r\n      const today = MenuControllers.generateDate();\r\n      const menu = await Menu.findAll({ where: { adminId: req.admin.id, createdAt: today } });\r\n      let menuMeals = [];\r\n      if (menu.length === 0) {\r\n        menuMeals.push(ordinaryMeal);\r\n        Menu.create({\r\n          meals: JSON.stringify(menuMeals),\r\n          adminId: req.admin.id\r\n        });\r\n        await Meal.update({ quantity }, { where: { id: mealId } });\r\n      } else {\r\n        menuMeals = MenuControllers.updateMeals(menu[0], ordinaryMeal, mealId, quantity);\r\n        Menu.update(\r\n          { meals: JSON.stringify(menuMeals) },\r\n          { where: { adminId: req.admin.id, createdAt: today } }\r\n        );\r\n        const mealIndex = await menuMeals.findIndex(menuMeal => menuMeal.id === Number(mealId));\r\n        await Meal.update({ quantity: menuMeals[mealIndex].quantity }, { where: { id: mealId } });\r\n      }\r\n      return res.status(200).json({\r\n        status: true,\r\n        message: `menu added to today's menu successfully`,\r\n        addMenu: menuMeals\r\n      });\r\n    } catch (error) {\r\n      return res.status(404).json({\r\n        status: false,\r\n        message: error.message\r\n      });\r\n    }\r\n  }\r\n\r\n  async getSingleMenu(req, res) {\r\n    try {\r\n      const today = MenuControllers.generateDate();\r\n      const menu = await Menu.findOne({ where: { createdAt: today, adminId: req.admin.id } });\r\n      return res.status(200).json({\r\n        status: true,\r\n        message: 'Menu Retrieved Successfully',\r\n        FetchData: menu\r\n      });\r\n    } catch (error) {\r\n      return res.status(404).json({\r\n        status: false,\r\n        message: error.message\r\n      });\r\n    }\r\n  }\r\n\r\n  async updateMeals(menu, ordinaryMeal, mealId, quantity) {\r\n    try {\r\n      const { meals } = menu.dataValues;\r\n      const updatedMenuMeals = JSON.parse(meals);\r\n      const mealIndex = await updatedMenuMeals.findIndex(\r\n        menuMeal => menuMeal.id === Number(mealId)\r\n      );\r\n      if (mealIndex < 0) {\r\n        updatedMenuMeals.push(ordinaryMeal);\r\n      } else {\r\n        updatedMenuMeals[mealIndex].quantity += Number(quantity);\r\n      }\r\n      return updatedMenuMeals;\r\n    } catch (error) {\r\n      return res.status(404).json({\r\n        status: false,\r\n        message: error.message\r\n      });\r\n    }\r\n  }\r\n}\r\n\r\nconst MenuControllers = new MenusControllers();\r\nexport default MenuControllers;\r\n"],"file":"menuController.js"}