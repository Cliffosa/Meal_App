{"version":3,"sources":["../../../api/src/controllers/orderController.js"],"names":["ordersController","req","res","status","send","success","message","meals","orders","body","name","price","quantity","order","id","length","push","found","parseInt","params","map","orderFound","itemIndex","index","newOrder","splice","createOrder","data","orderController"],"mappings":"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","sourcesContent":["import orders from '../models/orders';\r\nimport menu from '../models/menu';\r\n\r\nclass ordersController {\r\n  getAllOrders(req, res) {\r\n    return res.status(200).send({\r\n      success: true,\r\n      message: 'orders retrieved successfully',\r\n      meals: orders\r\n    });\r\n  }\r\n\r\n  createOrder(req, res) {\r\n    if (!req.body.name) {\r\n      return res.status(400).send({\r\n        success: false,\r\n        message: 'name is required'\r\n      });\r\n    } else if (!req.body.price) {\r\n      return res.status(400).send({\r\n        success: false,\r\n        message: 'quantity is required'\r\n      });\r\n    } else if (!req.body.quantity) {\r\n      return res.status(400).send({\r\n        success: false,\r\n        message: 'price is required'\r\n      });\r\n    }\r\n    const order = {\r\n      id: orders.length + 1,\r\n      name: req.body.name,\r\n      price: req.body.price,\r\n      quantity: req.body.quantity\r\n    };\r\n    orders.push(order);\r\n    return res.status(200).send({\r\n      success: true,\r\n      message: 'order  sucessfully created.',\r\n      meals: order\r\n    });\r\n  }\r\n\r\n  // get a single order\r\n  getOrder(req, res) {\r\n    let found = false;\r\n    const id = parseInt(req.params.id, 10);\r\n    orders.map(order => {\r\n      if (order.id === id) {\r\n        found = true;\r\n        return res.status(200).send({\r\n          success: true,\r\n          message: 'order retrieved successfully',\r\n          order\r\n        });\r\n      }\r\n    });\r\n    if (!found) {\r\n      return res.status(404).send({\r\n        success: false,\r\n        message: 'Order does not exist'\r\n      });\r\n    }\r\n    // check for invalid meal id and return false\r\n  }\r\n\r\n  // update a meal\r\n  updateOrder(req, res) {\r\n    const id = parseInt(req.params.id, 10);\r\n    let orderFound;\r\n    let itemIndex;\r\n    orders.map((order, index) => {\r\n      if (order.id === id) {\r\n        orderFound = order;\r\n        itemIndex = index;\r\n      }\r\n    });\r\n\r\n    if (!orderFound) {\r\n      return res.status(404).send({\r\n        success: false,\r\n        message: 'meal not found'\r\n      });\r\n    }\r\n    // validate body\r\n    if (!req.body.name) {\r\n      return res.status(400).send({\r\n        success: false,\r\n        message: 'name is required'\r\n      });\r\n    } else if (!req.body.quantity) {\r\n      return res.status(400).send({\r\n        success: false,\r\n        message: 'quantity is required'\r\n      });\r\n    } else if (!req.body.price) {\r\n      return res.status(400).send({\r\n        success: 'false',\r\n        message: 'price is required'\r\n      });\r\n    }\r\n    const newOrder = {\r\n      id: orderFound.id,\r\n      name: req.body.name || orderFound.name,\r\n      quantity: req.body.quantity || orderFound.quantity,\r\n      price: req.body.price || orderFound.price\r\n    };\r\n    orders.splice(itemIndex, 1, newOrder);\r\n\r\n    return res.status(201).send({\r\n      success: true,\r\n      message: 'order updated successfully',\r\n      createOrder: {\r\n        data: newOrder\r\n      }\r\n    });\r\n  }\r\n\r\n  // delete a meal\r\n  deleteOrder(req, res) {\r\n    const id = parseInt(req.params.id, 10);\r\n    let orderFound;\r\n    let itemIndex;\r\n    orders.map((order, index) => {\r\n      if (order.id === id) {\r\n        orderFound = order;\r\n        itemIndex = index;\r\n      }\r\n    });\r\n\r\n    if (!orderFound) {\r\n      return res.status(404).send({\r\n        success: false,\r\n        message: 'order not found'\r\n      });\r\n    }\r\n    orders.splice(itemIndex, 1);\r\n\r\n    return res.status(200).send({\r\n      success: true,\r\n      message: 'order deleted successfuly'\r\n    });\r\n  }\r\n}\r\n\r\n// create an instance of the class and export it\r\nconst orderController = new ordersController();\r\nexport default orderController;\r\n"],"file":"orderController.js"}