{"version":3,"sources":["../../api/test/menu_test.js"],"names":["process","env","NODE_ENV","secret","JWT_SECRET","assert","chai","expect","use","chaiHttp","PREFIX","ONE_WEEK","user0_Payload","name","email","phone","password","user1_Payload","admin0_Payload","admin1_Payload","before","done","User","create","then","Admin","describe","context","it","request","server","get","res","to","have","status","equal","body","catch","err","console","log","message","findOne","where","user","id","token","jwt","sign","expiresIn","set","admin","isAdmin","Meal","price","imageUrl","AdminId","meal","Id","post","send","quantity","mealId","API_PREFIX","data","destroy","after"],"mappings":"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","sourcesContent":["process.env.NODE_ENV = 'test';\r\nimport chai from 'chai';\r\nimport chaiHttp from 'chai-http';\r\nimport server from '../src/app';\r\nimport jwt from 'jsonwebtoken';\r\nimport { config } from 'dotenv';\r\nimport User from '../src/models/user';\r\nimport Admin from '../src/models/admin';\r\nimport Meal from '../src/models/meals';\r\n\r\nconfig();\r\nconst secret = process.env.JWT_SECRET;\r\nconst { assert, expect } = chai;\r\nchai.use(chaiHttp);\r\n\r\nconst PREFIX = '/api/v1';\r\nconst ONE_WEEK = 60 * 60 * 24 * 7;\r\n\r\nconst user0_Payload = {\r\n  name: 'steve burma',\r\n  email: 'burma@gmail.com',\r\n  phone: '09078909098',\r\n  password: 'steve12345'\r\n};\r\nconst user1_Payload = {\r\n  name: 'steve Joe',\r\n  email: 'steve@gmail.com',\r\n  phone: '09078909098',\r\n  password: 'steve12345'\r\n};\r\n\r\nconst admin0_Payload = {\r\n  name: 'andrei burma',\r\n  email: 'andrei@gmail.com',\r\n  phone: '07060538862',\r\n  password: 'andrei12345'\r\n};\r\n\r\nconst admin1_Payload = {\r\n  name: 'cliff burma',\r\n  email: 'cliff@gmail.com',\r\n  phone: '09057996214',\r\n  password: 'cliff12345'\r\n};\r\n\r\nbefore(done => {\r\n  User.create(user0_Payload)\r\n    .then(() => {\r\n      return Admin.create(admin0_Payload);\r\n    })\r\n    .then(() => {\r\n      done();\r\n    });\r\n});\r\n\r\ndescribe('Menu Endpoints', () => {\r\n  context('Get all Menus (User)', () => {\r\n    it(`GET ${PREFIX}/menu/ - Fetch All Menus (Unauthorized)`, done => {\r\n      chai\r\n        .request(server)\r\n        .get(`${PREFIX}/menu/`)\r\n        .then(res => {\r\n          expect(res).to.have.status(401);\r\n          assert.equal(res.body.status, 'error');\r\n          done();\r\n        })\r\n        .catch(err => console.log('GET /menu/', err.message));\r\n    });\r\n    it(`GET ${PREFIX}/menu/ - Fetch All Menus - (User Authorized)`, done => {\r\n      User.findOne({ where: { email: user0_Payload.email } }).then(user => {\r\n        const { id, name, email, phone } = user;\r\n        const token = jwt.sign(\r\n          {\r\n            user: { id, name, email, phone }\r\n          },\r\n          secret,\r\n          {\r\n            expiresIn: ONE_WEEK\r\n          }\r\n        );\r\n        chai\r\n          .request(server)\r\n          .get(`${PREFIX}/menu/`)\r\n          .set('Authorization', `Bearer ${token}`)\r\n          .then(res => {\r\n            expect(res).to.have.status(200);\r\n            assert.equal(res.body.status, 'success');\r\n            done();\r\n          })\r\n          .catch(err => console.log('GET /menu/', err.message));\r\n      });\r\n    });\r\n  });\r\n\r\n  context(`Get Admin's own Menu (Admin)`, () => {\r\n    it(`GET ${PREFIX}/menu/admin -Admin can not Fetch Menu (Unauthorized)`, done => {\r\n      chai\r\n        .request(server)\r\n        .get(`${PREFIX}/menu/admin`)\r\n        .then(res => {\r\n          expect(res).to.have.status(401);\r\n          assert.equal(res.body.status, 'error');\r\n          done();\r\n        })\r\n        .catch(err => console.log('GET /menu/admin', err.message));\r\n    });\r\n    it(`GET ${PREFIX}/menu/admin - Admin can Fetch Menu - (Authorized)`, done => {\r\n      Admin.findOne({ where: { email: admin0_Payload.email } }).then(admin => {\r\n        const { id, name, email, phone } = admin;\r\n        const token = jwt.sign(\r\n          {\r\n            admin: { id, name, email, phone },\r\n            isAdmin: true\r\n          },\r\n          secret,\r\n          {\r\n            expiresIn: ONE_WEEK\r\n          }\r\n        );\r\n        chai\r\n          .request(server)\r\n          .get(`${PREFIX}/menu/admin`)\r\n          .set('Authorization', `Bearer ${token}`)\r\n          .then(res => {\r\n            expect(res).to.have.status(200);\r\n            assert.equal(res.body.status, 'success');\r\n            done();\r\n          })\r\n          .catch(err => console.log('GET /menu/admin', err.message));\r\n      });\r\n    });\r\n  });\r\n\r\n  context('Admin can Add Meal To Menu', () => {\r\n    Admin.create(admin1_Payload)\r\n      .then(admin => {\r\n        return Meal.create({\r\n          name: 'Food one',\r\n          price: 700,\r\n          imageUrl: 'food.png',\r\n          AdminId: admin.id\r\n        });\r\n      })\r\n      .then(meal => {\r\n        const Id = meal.id;\r\n        it(`POST ${PREFIX}/menu/ - Add Meal Option To Menu(Unauthorized)`, done => {\r\n          chai\r\n            .request(server)\r\n            .post(`${PREFIX}/menu/`)\r\n            .send({\r\n              Id,\r\n              quantity: 2\r\n            })\r\n            .then(res => {\r\n              expect(res).to.have.status(401);\r\n              assert.equal(res.body.status, 'error');\r\n              done();\r\n            })\r\n            .catch(err => console.log('POST /menu/', err.message));\r\n        });\r\n        it(`POST ${PREFIX}/menu/ - Admin can Add Meal Option To Menu - (Validation Test)`, done => {\r\n          Admin.findOne({ where: { email: admin1_Payload.email } }).then(admin => {\r\n            const token = jwt.sign(\r\n              {\r\n                admin: {\r\n                  id: admin.id,\r\n                  name: admin.name,\r\n                  email: admin.email,\r\n                  phone: admin.phone\r\n                },\r\n                isAdmin: true\r\n              },\r\n              secret,\r\n              {\r\n                expiresIn: ONE_WEEK\r\n              }\r\n            );\r\n            chai\r\n              .request(server)\r\n              .post(`${PREFIX}/menu/`)\r\n              .set('Authorization', `Bearer ${token}`)\r\n              .send({\r\n                Id\r\n              })\r\n              .then(res => {\r\n                expect(res).to.have.status(400);\r\n                assert.equal(res.body.status, 'error');\r\n                done();\r\n              })\r\n              .catch(err => console.log('POST /menu/', err.message));\r\n          });\r\n        });\r\n        it(`POST ${PREFIX}/menu/ -Can not Add Meal Option To Menu when Meal ID does not exist)`, done => {\r\n          Admin.findOne({ where: { email: admin1_Payload.email } }).then(admin => {\r\n            const token = jwt.sign(\r\n              {\r\n                admin: {\r\n                  id: admin.id,\r\n                  name: admin.name,\r\n                  email: admin.email,\r\n                  phone: admin.phone\r\n                },\r\n                isAdmin: true\r\n              },\r\n              secret,\r\n              {\r\n                expiresIn: ONE_WEEK\r\n              }\r\n            );\r\n            chai\r\n              .request(server)\r\n              .post(`${PREFIX}/menu/`)\r\n              .set('Authorization', `Bearer ${token}`)\r\n              .send({\r\n                mealId: 890000000,\r\n                quantity: 10\r\n              })\r\n              .then(res => {\r\n                expect(res).to.have.status(500);\r\n                assert.equal(res.body.status, 'error');\r\n                done();\r\n              })\r\n              .catch(err => console.log('POST /menu/', err.message));\r\n          });\r\n        });\r\n        it(`POST ${API_PREFIX}/menu/ -Admin can Add Meal Option To Menu -)`, done => {\r\n          Admin.findOne({ where: { email: admin1_Payload.email } })\r\n            .then(admin => {\r\n              const token = jwt.sign(\r\n                {\r\n                  admin: {\r\n                    id: admin.id,\r\n                    name: admin.name,\r\n                    email: admin.email,\r\n                    phone: admin.phone\r\n                  },\r\n                  isAdmin: true\r\n                },\r\n                secret,\r\n                {\r\n                  expiresIn: ONE_WEEK\r\n                }\r\n              );\r\n              chai\r\n                .request(server)\r\n                .post(`${PREFIX}/menu/`)\r\n                .set('Authorization', `Bearer ${token}`)\r\n                .send({\r\n                  Id,\r\n                  quantity: 5\r\n                })\r\n                .then(res => {\r\n                  expect(res).to.have.status(200);\r\n                  assert.equal(res.body.status, 'success');\r\n                  done();\r\n                })\r\n                .catch(err => console.log('POST /menu/', err.message));\r\n            })\r\n            .catch(err => console.log(err.message));\r\n        });\r\n        it(`POST ${PREFIX}/menu/ -UPADATE Meal Option To Menu)`, done => {\r\n          Admin.findOne({ where: { email: admin1_Payload.email } }).then(admin => {\r\n            const token = jwt.sign(\r\n              {\r\n                admin: {\r\n                  id: admin.id,\r\n                  name: admin.name,\r\n                  email: admin.email,\r\n                  phone: admin.phone\r\n                },\r\n                isAdmin: true\r\n              },\r\n              secret,\r\n              {\r\n                expiresIn: ONE_WEEK\r\n              }\r\n            );\r\n            chai\r\n              .request(server)\r\n              .post(`${PREFIX}/menu/`)\r\n              .set('Authorization', `Bearer ${token}`)\r\n              .send({\r\n                Id,\r\n                quantity: 5\r\n              })\r\n              .then(res => {\r\n                expect(res).to.have.status(200);\r\n                assert.equal(res.body.status, 'success');\r\n                assert.equal(res.body.data[0].quantity, 2);\r\n                Meal.destroy({ where: { id: Id } }).then(() => {\r\n                  done();\r\n                });\r\n              })\r\n              .catch(err => console.log('POST /menu/', err.message));\r\n          });\r\n        });\r\n      })\r\n      .catch(err => console.log(err.message));\r\n  });\r\n});\r\n\r\nafter(done => {\r\n  User.destroy({ where: { email: user0_Payload.email } })\r\n    .then(async () => {\r\n      await Admin.destroy({ where: { email: admin0_Payload.email } });\r\n      return Admin.destroy({ where: { email: admin1_Payload.email } });\r\n    })\r\n    .then(() => {\r\n      done();\r\n    });\r\n});\r\n"],"file":"menu_test.js"}